{"version":3,"sources":["components/Vote/Vote.tsx","components/Modal/Modal.tsx","components/Card/Card.tsx","components/Search/Search.tsx","components/Navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CircularProgressWithLabel","props","_useState","useState","_useState2","_slicedToArray","loader","setLoader","useEffect","timer","setTimeout","clearTimeout","variant","React","Box","sx","position","display","CircularProgress","Object","assign","right","flexDirection","alignItems","justifyContent","Typography","marginLeft","component","color","concat","Math","round","value","Modal_card","_ref","id","title","poster_path","overview","vote_average","show","setShow","handleClose","handleShow","createElement","Fragment","className","onClick","Modal","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","style","src","alt","borderRadius","width","height","float","paddingLeft","Footer","Button","Card","shortTitle","slice","shortOverview","paddingTop","margin","key","bottom","marginRight","marginBottom","marginTop","borderColor","parseInt","Search","onSearch","query","setQuery","padding","boxShadow","zIndex","onSubmit","event","preventDefault","type","placeholder","onChange","e","target","paddingBottom","paddingRight","Navbar","background","backdropFilter","WebkitBackdropFilter","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","movies","setMovies","handleSearch","_asyncToGenerator","_callee","response","_context","axios","get","data","results","_x","apply","arguments","map","movie","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a6ca3419.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport CircularProgress, {\r\n    CircularProgressProps,\r\n} from '@mui/material/CircularProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport { useState, useEffect } from 'react';\r\n\r\ninterface Props {\r\n    vote_average: string;\r\n}\r\n\r\nexport function CircularProgressWithLabel(\r\n    props: CircularProgressProps & { value: number },\r\n) {\r\n        const [loader, setLoader] = useState<string>(\"indeterminate\");\r\n      \r\n        useEffect(() => {\r\n          const timer = setTimeout(() => {\r\n            setLoader(\"determinate\");\r\n          }, 1000);\r\n          return () => clearTimeout(timer);\r\n        }, []);\r\n      \r\n        const variant = loader === \"indeterminate\" ? \"indeterminate\" : \"determinate\";\r\n      \r\n    return (\r\n        <Box sx={{ position: 'relative', display: 'inline-flex' }}>\r\n            <CircularProgress variant={variant} {...props} />\r\n            <Box\r\n                sx={{\r\n                    right: \"0\",\r\n                    position: 'relative',\r\n                    display: 'flex',\r\n                    flexDirection: \"row-reverse\",\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                }}\r\n            >\r\n                <Typography\r\n                    sx={{\r\n                        marginLeft: \"-2.5rem\"\r\n                    }}\r\n                    variant=\"caption\"\r\n                    component=\"div\"\r\n                    color=\"text.primary\"\r\n                >{`${Math.round(props.value)}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default function CircularStatic() {\r\n    const [progress, setProgress] = React.useState(10);\r\n\r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\r\n        }, 800);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return <CircularProgressWithLabel value={progress} />;\r\n}","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\ninterface Props {\r\n    id: number;\r\n    title: string;\r\n    poster_path: string;\r\n    overview: string;\r\n    vote_average: string;\r\n}\r\n\r\nexport const Modal_card: React.FC<Props> = ({ id, title, poster_path, overview, vote_average }) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <button className=\"btn btn-primary rounded-pill col\" onClick={handleShow}>\r\n                Mostra\r\n            </button>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div style={{ display: \"inline-block\" }} className='d-flex flex-row'>\r\n                        {poster_path ? (\r\n                            <img\r\n                                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\r\n                                alt={title}\r\n                                className=\"card-img-top\"\r\n                                style={{ borderRadius: \"1.5rem\", width: \"12rem\", height: \"15rem\", float: \"left\" }}\r\n                            />\r\n                        ) : (\r\n                            <img\r\n                                src=\"https://raw.githubusercontent.com/stefanosallemi/TMDB-APP/main/src/components/Card/default.webp\"\r\n                                alt=\"Copertina non disponibile\"\r\n                                className=\"card-img-top\"\r\n                                style={{ borderRadius: \"1.5rem\", width: \"12rem\", height: \"15rem\", float: \"left\" }}\r\n                            />\r\n                        )}\r\n                        <p style={{ paddingLeft: \"1rem\"}}>\r\n                            {overview}\r\n                        </p>\r\n                    </div>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer style={{ borderRadius: \"5rem\" }}>\r\n                    <Button variant=\"secondary\" className=\"btn rounded-pill\" onClick={handleClose}>\r\n                        Chiudi\r\n                    </Button>\r\n                    <button className=\"btn btn-primary rounded-pill\" onClick={handleShow}>\r\n                        Salva\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { CircularProgressWithLabel } from '../Vote/Vote';\r\nimport { Modal_card } from '../Modal/Modal';\r\ninterface Props {\r\n    id: number;\r\n    title: string;\r\n    poster_path: string;\r\n    overview: string;\r\n    vote_average: string;\r\n}\r\n\r\nexport const Card: React.FC<Props> = ({ id, title, poster_path, overview, vote_average }) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    if (overview === \"\") {\r\n        overview = \"Nessuna descrizione\";\r\n    }\r\n\r\n    const shortTitle = title.slice(0, 45);\r\n\r\n    const shortOverview = overview.slice(0, 80) + \"...\";\r\n\r\n    return (\r\n        <div className=\"card\" style={{ width: \"20rem\", borderRadius: \"2rem\", paddingTop: \"0.7rem\", margin: \"1rem\" }} key={id}>\r\n            {poster_path ? (\r\n                <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} className=\"card-img-top\" style={{ borderRadius: \"1.5rem\" }} />\r\n            ) : (\r\n                <img src=\"https://raw.githubusercontent.com/stefanosallemi/TMDB-APP/main/src/components/Card/default.webp\" alt=\"Copertina non disponibile\" className=\"card-img-top\" style={{ borderRadius: \"1.5rem\" }} />\r\n            )}\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{shortTitle}</h5>\r\n                <p className=\"card-text\">\r\n                    {shortOverview}\r\n                </p>\r\n                <div className='row' style={{ bottom: \"0\" }}>\r\n                    <Modal_card id={id} title={title} poster_path={poster_path} overview={overview} vote_average={vote_average} />\r\n                    <button className=\"btn rounded-pill\" style={{ marginRight: \"-1rem\", marginBottom: \"-1rem\", marginTop: \"-0.8rem\", width: \"5rem\", borderColor: \"transparent\" }}>\r\n                        <CircularProgressWithLabel value={parseInt(vote_average) * 10} />\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\ninterface Props {\r\n    onSearch: (query: string) => void;\r\n}\r\n\r\nexport const Search: React.FC<Props> = ({ onSearch }) => {\r\n    const [query, setQuery] = useState('');\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        onSearch(query);\r\n    };\r\n\r\n    return (\r\n        <div className='d-flex flex-row justify-content-around'>\r\n            <div className=\"card\" style={{ padding: \"0.1rem\", margin: \"2rem\", borderRadius: \"3rem\", boxShadow: \"0 0 0.7rem #cdcdcd\", width: \"18rem\", height: \"4rem\", zIndex: 1, bottom: 0, position: \"fixed\" }}>\r\n                <div className=\"card-body\" style={{ marginTop: \"-0.35rem\" }}>\r\n                    <div className='d-flex flex-row-reverse justify-content-between' style={{ marginLeft: \"-0.3rem\" }}>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"mb-3\">\r\n                                <input style={{ width: \"16.3rem\", height: \"2.4rem\", marginRight: \"-0.3rem\" }}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Cerca un film\"\r\n                                    value={query}\r\n                                    onChange={(e) => setQuery(e.target.value)} className=\"form-control rounded-pill\" />\r\n                                <button value=\"submit\" type=\"submit\" className=\"btn btn-primary rounded-pill\" style={{ paddingBottom: \"0.6rem\", paddingLeft: \"1rem\", paddingRight: \"1.1rem\", height: \"2.4rem\", marginTop: \"-4.2rem\", marginLeft: \"11.6rem\", marginRight: \"-1rem\", zIndex: \"1\" }}>Cerca</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar fixed-top\" style={{background: \"rgba(255, 255, 255, 0.19)\", borderRadius: \"0\",\r\n        boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\r\n        backdropFilter: \"blur(5px)\",\r\n        WebkitBackdropFilter: \"blur(5px)\",\r\n        }}>\r\n            <div className=\"container-fluid\" style={{justifyContent: \"center\"}}>\r\n                <span className=\"navbar-brand mb-0 h1\">MOVIES SEARCH APP</span>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Card } from './components/Card/Card';\nimport { Search } from './components/Search/Search';\nimport { Navbar } from './components/Navbar/Navbar';\ninterface Movie {\n  id: number;\n  title: string;\n  poster_path: string;\n  overview: string;\n  vote_average: string;\n}\n\nconst App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleSearch = async (query: string) => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=548f27d6b5190070c81de2b221563690&query=${query}`\n    );\n    setMovies(response.data.results);\n  };\n\n  return (<div>\n    <Navbar />\n    <Search onSearch={handleSearch} />\n    <div className='d-flex justify-content-center row' style={{ marginBottom: \"6rem\", marginTop: \"3rem\" }}>\n      {movies.map((movie) => (\n        <Card id={movie.id} title={movie.title} poster_path={movie.poster_path} overview={movie.overview} vote_average={movie.vote_average} />\n      ))}\n    </div>\n  </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}