{"version":3,"sources":["components/Card/Card.tsx","components/Search/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","_ref","id","title","poster_path","overview","vote_average","shortOverview","slice","React","createElement","className","style","width","borderRadius","paddingTop","margin","key","src","concat","alt","bottom","href","parseInt","Search","onSearch","_useState","useState","_useState2","_slicedToArray","query","setQuery","padding","boxShadow","height","zIndex","position","marginTop","marginLeft","type","paddingBottom","paddingLeft","paddingRight","marginRight","onSubmit","event","preventDefault","placeholder","value","onChange","e","target","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","movies","setMovies","handleSearch","_asyncToGenerator","_callee","response","_context","axios","get","data","results","_x","apply","arguments","map","movie","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b31a00ec.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\ninterface Props {\r\n    id: number;\r\n    title: string;\r\n    poster_path: string;\r\n    overview: string;\r\n    vote_average: string;\r\n}\r\nexport const Card: React.FC<Props> = ({ id, title, poster_path, overview, vote_average }) => {\r\n    if (overview === \"\") {\r\n        overview = \"Nessuna descrizione\";\r\n    }\r\n    const shortOverview = overview.slice(0, 70) + \"...\";\r\n\r\n    return (\r\n        <div className=\"card\" style={{ width: \"17rem\", borderRadius: \"2rem\", paddingTop: \"0.7rem\", margin: \"1rem\" }} key={id}>\r\n    {poster_path ? (\r\n        <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} className=\"card-img-top\" style={{ borderRadius: \"1.5rem\" }} />\r\n    ) : (\r\n        <img src=\"/Card/default.webp\" alt=\"Copertina non disponibile\" className=\"card-img-top\" style={{ borderRadius: \"1.5rem\" }} />\r\n    )}\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <p className=\"card-text\">\r\n                    {shortOverview}\r\n                </p>\r\n                <div className='row justify-content-between' style={{bottom: \"0\"}}>\r\n                    <a href=\"#\" className=\"btn btn-primary rounded-pill col\">\r\n                        Mostra\r\n                    </a>\r\n                    <a href=\"#\" className=\"btn btn-success rounded-pill col\">\r\n                        {parseInt(vote_average)}/10\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\ninterface Props {\r\n    onSearch: (query: string) => void;\r\n}\r\n\r\nexport const Search: React.FC<Props> = ({ onSearch }) => {\r\n    const [query, setQuery] = useState('');\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        onSearch(query);\r\n    };\r\n\r\n    return (\r\n        <div className='d-flex flex-row justify-content-around'>\r\n            <div className=\"card\" style={{ padding: \"0.1rem\", margin: \"2rem\", borderRadius: \"3rem\", boxShadow: \"0 0 0.7rem #cdcdcd\", width: \"18rem\", height: \"4rem\", zIndex: 1, bottom: 0, position: \"fixed\" }}>\r\n                <div className=\"card-body\" style={{ marginTop: \"-0.35rem\" }}>\r\n                    <div className='d-flex flex-row-reverse justify-content-between' style={{ marginLeft: \"-0.3rem\" }}>\r\n                        <button type=\"submit\" className=\"btn btn-primary rounded-pill\" style={{ paddingBottom: \"0.6rem\", paddingLeft: \"1rem\", paddingRight: \"1.1rem\", height: \"2.4rem\", marginRight: \"-0.25rem\" }}>Cerca</button>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"mb-3\">\r\n                                <input style={{ width: \"16.3rem\", height: \"2.4rem\", marginRight: \"-10rem\" }}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Cerca un film\"\r\n                                    value={query}\r\n                                    onChange={(e) => setQuery(e.target.value)} className=\"form-control rounded-pill\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Card } from './components/Card/Card';\nimport { Search } from './components/Search/Search';\nimport 'bootstrap/dist/css/bootstrap.css';\n\ninterface Movie {\n  id: number;\n  title: string;\n  poster_path: string;\n  overview: string;\n  vote_average: string;\n}\n\nconst App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleSearch = async (query: string) => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=548f27d6b5190070c81de2b221563690&query=${query}`\n    );\n    setMovies(response.data.results);\n  };\n\n  return (<div>\n    <Search onSearch={handleSearch} />\n    <div className='d-flex justify-content-center row'>\n      {movies.map((movie) => (\n        <Card id={movie.id} title={movie.title} poster_path={movie.poster_path} overview={movie.overview} vote_average={movie.vote_average} />\n      ))}\n    </div>\n  </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}